---
import SectionTitle from "./Common/SectionTitle.astro";
import OfferList from "./OfferList.astro";
import PricingBox from "./PricingBox.astro";
import { pricingData } from "../data/pricingData";
---

<section id="pricing" class="relative z-10 py-16 md:py-20 lg:py-28">
  <div class="container">
    <SectionTitle
      title="Simple and Affordable Pricing"
      paragraph="There are many variations of passages of Lorem Ipsum available but the majority have suffered alteration in some form."
      center={true}
      width="665px"
    />

    <div class="w-full">
      <div
        class="wow fadeInUp mb-8 flex justify-center md:mb-12 lg:mb-16"
        data-wow-delay=".1s"
      >
        <span
          class="mr-4 cursor-pointer text-base font-semibold text-primary"
          id="monthlyToggle"
        >
          Monthly
        </span>
        <div
          class="flex cursor-pointer items-center"
          id="toggleButton"
        >
          <div class="relative">
            <div class="h-5 w-14 rounded-full bg-[#1D2144] shadow-inner"></div>
            <div
              class="shadow-switch-1 absolute left-0 top-[-4px] flex h-7 w-7 items-center justify-center rounded-full bg-primary transition"
              id="slider"
            >
              <span class="active h-4 w-4 rounded-full bg-white"></span>
            </div>
          </div>
        </div>
        <span
          class="ml-4 cursor-pointer text-base font-semibold text-dark dark:text-white"
          id="yearlyToggle"
        >
          Yearly
        </span>
      </div>
    </div>

    <div class="grid grid-cols-1 gap-x-8 gap-y-10 md:grid-cols-2 lg:grid-cols-3">
      {pricingData.map((pricing) => (
        <PricingBox
          packageName={pricing.packageName}
          monthlyPrice={pricing.monthlyPrice}
          yearlyPrice={pricing.yearlyPrice}
          duration="mo"
          subtitle={pricing.subtitle}
        >
          {pricing.features.map((feature) => (
            <OfferList text={feature.text} status={feature.status} />
          ))}
        </PricingBox>
      ))}
    </div>
  </div>

  <div class="absolute bottom-0 left-0 z-[-1]">
    <svg
      width="239"
      height="601"
      viewBox="0 0 239 601"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <rect
        opacity="0.3"
        x="-184.451"
        y="600.973"
        width="196"
        height="541.607"
        rx="2"
        transform="rotate(-128.7 -184.451 600.973)"
        fill="url(#paint0_linear_93:235)"
      />
      <rect
        opacity="0.3"
        x="-188.201"
        y="385.272"
        width="59.7544"
        height="541.607"
        rx="2"
        transform="rotate(-128.7 -188.201 385.272)"
        fill="url(#paint1_linear_93:235)"
      />
      <defs>
        <linearGradient
          id="paint0_linear_93:235"
          x1="-90.1184"
          y1="420.414"
          x2="-90.1184"
          y2="1131.65"
          gradientUnits="userSpaceOnUse"
        >
          <stop stop-color="#4A6CF7" />
          <stop offset="1" stop-color="#4A6CF7" stop-opacity="0" />
        </linearGradient>
        <linearGradient
          id="paint1_linear_93:235"
          x1="-159.441"
          y1="204.714"
          x2="-159.441"
          y2="915.952"
          gradientUnits="userSpaceOnUse"
        >
          <stop stop-color="#4A6CF7" />
          <stop offset="1" stop-color="#4A6CF7" stop-opacity="0" />
        </linearGradient>
      </defs>
    </svg>
  </div>
</section>

<script>
  const toggleButton = document.getElementById('toggleButton');
  const monthlyToggle = document.getElementById('monthlyToggle');
  const yearlyToggle = document.getElementById('yearlyToggle');
  const slider = document.getElementById('slider');
  const priceElements = document.querySelectorAll('.price .amount');
  const durationElements = document.querySelectorAll('.price .time');

  let isMonthly = true;

  toggleButton.addEventListener('click', () => {
    isMonthly = !isMonthly;
    slider.classList.toggle('translate-x-full');
    monthlyToggle.classList.toggle('text-primary');
    monthlyToggle.classList.toggle('text-dark');
    yearlyToggle.classList.toggle('text-primary');
    yearlyToggle.classList.toggle('text-dark');

    priceElements.forEach((el) => {
      const monthlyPrice = el.getAttribute('data-monthly');
      const yearlyPrice = el.getAttribute('data-yearly');
      el.textContent = isMonthly ? monthlyPrice : yearlyPrice;
    });

    durationElements.forEach((el) => {
      el.textContent = isMonthly ? '/mo' : '/yr';
    });
  });
</script>
