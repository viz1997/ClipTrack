---
import Feature from "../cards/Feature.astro";
import Container from "../shared/Container.astro";
import Paragraph from "../shared/Paragraph.astro";
import GradiantText from "../shared/GradiantText.astro";
import Title from "../shared/Title.astro";
import { ui, defaultLang, languages } from '../../i18n/ui';
import { getLangFromUrl, useTranslations } from '../../i18n/utils';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// 获取当前语言的 solutions 数据
const features = ui[lang]?.features || ui[defaultLang].features;


type featuresProps = {
 subtitle: string;
  content: string[];
  icon: string;
};

export interface Props {
  className?: string;
}

const { className } = Astro.props;
---

<!-- <section
  id="features"
  class=`relative bg-gradient-to-br from-blue-100 to-sky-200 dark:from-indigo-800 dark:to-green-950  ${className}`
> -->
<section
  id="features"
  class=`relative  dark:bg-gradient-to-br dark:from-indigo-800 dark:to-green-950  ${className}`
>
  <span
    class="w-40 h-40 rounded-full bg-gradient-to-br from-sky-200 dark:from-sky-500 from-0% via-primary dark:via-primary via-80% to-green-400 dark:to-green-600 to-110%
    absolute left-1/3 bottom-1/3"
  ></span>
  <span
    class="w-40 h-40 rounded-full bg-gradient-to-br from-yellow-200 dark:from-yellow-400 from-0% via-sky-500 dark:via-sky-700 via-85% to-primary dark:to-primary to-100%
    absolute right-1/4 bottom-0"
  ></span>
  <span
    class="w-40 h-40 rounded-full bg-gradient-to-br from-green-300 dark:from-green-500 from-0% via-primary dark:via-primary via-80% to-sky-400 dark:to-sky-600 to-110%
    absolute right-1/3 top-1/3"
  ></span>

  <span
    class="w-40 h-40 rounded-full bg-gradient-to-br from-green-300 dark:from-green-500 from-0% via-primary dark:via-primary via-80% to-sky-400 dark:to-sky-600 to-110%
    absolute right-3/4 top-1/3"
  ></span>
  <Container className="space-y-10 md:sapce-y-12">
    <div class="text-center max-w-3xl mx-auto space-y-4">
      <Title className="">{t("features.title")}   <GradiantText> ClipTrack </GradiantText></Title>
    </div>
    <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-8">
      {
        features.items.map((item: featuresProps) => {

          return (
            <Feature
               subtitle={item.subtitle}
          content={item.content}
          icon={item.icon}
            />
          );
        })
      }
    </div>
  </Container>
</section>
